{"numFailedTestSuites":2,"numFailedTests":5,"numPassedTestSuites":1,"numPassedTests":4,"numPendingTestSuites":0,"numPendingTests":0,"numRuntimeErrorTestSuites":1,"numTodoTests":0,"numTotalTestSuites":3,"numTotalTests":9,"openHandles":[],"snapshot":{"added":0,"didUpdate":false,"failure":false,"filesAdded":0,"filesRemoved":0,"filesRemovedList":[],"filesUnmatched":0,"filesUpdated":0,"matched":0,"total":0,"unchecked":0,"uncheckedKeysByFile":[],"unmatched":0,"updated":0},"startTime":1739942082397,"success":false,"testResults":[{"leaks":false,"numFailingTests":3,"numPassingTests":0,"numPendingTests":0,"numTodoTests":0,"openHandles":[],"perfStats":{"end":1739942083388,"runtime":934,"slow":false,"start":1739942082454},"skipped":false,"snapshot":{"added":0,"fileDeleted":false,"matched":0,"unchecked":0,"uncheckedKeys":[],"unmatched":0,"updated":0},"testFilePath":"/Users/leeray/Projects/GitHub/ai-mermaid-chart-generator/nodejs-api/src/test/routes/api.test.js","testResults":[{"ancestorTitles":["API Routes","POST /api/v1/ai-mermaid/generate"],"duration":2,"failureDetails":[{}],"failureMessages":["TypeError: app.address is not a function\n    at Test.serverAddress (/Users/leeray/Projects/GitHub/ai-mermaid-chart-generator/nodejs-api/node_modules/supertest/lib/test.js:46:22)\n    at new Test (/Users/leeray/Projects/GitHub/ai-mermaid-chart-generator/nodejs-api/node_modules/supertest/lib/test.js:34:14)\n    at Object.obj.<computed> [as post] (/Users/leeray/Projects/GitHub/ai-mermaid-chart-generator/nodejs-api/node_modules/supertest/index.js:43:18)\n    at Object.post (/Users/leeray/Projects/GitHub/ai-mermaid-chart-generator/nodejs-api/src/test/routes/api.test.js:11:10)\n    at Promise.then.completed (/Users/leeray/Projects/GitHub/ai-mermaid-chart-generator/nodejs-api/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/Users/leeray/Projects/GitHub/ai-mermaid-chart-generator/nodejs-api/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/Users/leeray/Projects/GitHub/ai-mermaid-chart-generator/nodejs-api/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at _runTest (/Users/leeray/Projects/GitHub/ai-mermaid-chart-generator/nodejs-api/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/Users/leeray/Projects/GitHub/ai-mermaid-chart-generator/nodejs-api/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/Users/leeray/Projects/GitHub/ai-mermaid-chart-generator/nodejs-api/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/Users/leeray/Projects/GitHub/ai-mermaid-chart-generator/nodejs-api/node_modules/jest-circus/build/run.js:121:9)\n    at run (/Users/leeray/Projects/GitHub/ai-mermaid-chart-generator/nodejs-api/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/Users/leeray/Projects/GitHub/ai-mermaid-chart-generator/nodejs-api/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/Users/leeray/Projects/GitHub/ai-mermaid-chart-generator/nodejs-api/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/Users/leeray/Projects/GitHub/ai-mermaid-chart-generator/nodejs-api/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/Users/leeray/Projects/GitHub/ai-mermaid-chart-generator/nodejs-api/node_modules/jest-runner/build/runTest.js:444:34)\n    at Object.worker (/Users/leeray/Projects/GitHub/ai-mermaid-chart-generator/nodejs-api/node_modules/jest-runner/build/testWorker.js:106:12)"],"fullName":"API Routes POST /api/v1/ai-mermaid/generate should generate Mermaid code and save chat history","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should generate Mermaid code and save chat history"},{"ancestorTitles":["API Routes","POST /api/v1/ai-mermaid/generate"],"duration":0,"failureDetails":[{}],"failureMessages":["TypeError: app.address is not a function\n    at Test.serverAddress (/Users/leeray/Projects/GitHub/ai-mermaid-chart-generator/nodejs-api/node_modules/supertest/lib/test.js:46:22)\n    at new Test (/Users/leeray/Projects/GitHub/ai-mermaid-chart-generator/nodejs-api/node_modules/supertest/lib/test.js:34:14)\n    at Object.obj.<computed> [as post] (/Users/leeray/Projects/GitHub/ai-mermaid-chart-generator/nodejs-api/node_modules/supertest/index.js:43:18)\n    at Object.post (/Users/leeray/Projects/GitHub/ai-mermaid-chart-generator/nodejs-api/src/test/routes/api.test.js:25:10)\n    at Promise.then.completed (/Users/leeray/Projects/GitHub/ai-mermaid-chart-generator/nodejs-api/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/Users/leeray/Projects/GitHub/ai-mermaid-chart-generator/nodejs-api/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/Users/leeray/Projects/GitHub/ai-mermaid-chart-generator/nodejs-api/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at _runTest (/Users/leeray/Projects/GitHub/ai-mermaid-chart-generator/nodejs-api/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/Users/leeray/Projects/GitHub/ai-mermaid-chart-generator/nodejs-api/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/Users/leeray/Projects/GitHub/ai-mermaid-chart-generator/nodejs-api/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/Users/leeray/Projects/GitHub/ai-mermaid-chart-generator/nodejs-api/node_modules/jest-circus/build/run.js:121:9)\n    at run (/Users/leeray/Projects/GitHub/ai-mermaid-chart-generator/nodejs-api/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/Users/leeray/Projects/GitHub/ai-mermaid-chart-generator/nodejs-api/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/Users/leeray/Projects/GitHub/ai-mermaid-chart-generator/nodejs-api/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/Users/leeray/Projects/GitHub/ai-mermaid-chart-generator/nodejs-api/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/Users/leeray/Projects/GitHub/ai-mermaid-chart-generator/nodejs-api/node_modules/jest-runner/build/runTest.js:444:34)\n    at Object.worker (/Users/leeray/Projects/GitHub/ai-mermaid-chart-generator/nodejs-api/node_modules/jest-runner/build/testWorker.js:106:12)"],"fullName":"API Routes POST /api/v1/ai-mermaid/generate should return 500 if user input is missing","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should return 500 if user input is missing"},{"ancestorTitles":["API Routes","GET /api/v1/ai-mermaid/history"],"duration":5,"failureDetails":[{}],"failureMessages":["TypeError: app.address is not a function\n    at Test.serverAddress (/Users/leeray/Projects/GitHub/ai-mermaid-chart-generator/nodejs-api/node_modules/supertest/lib/test.js:46:22)\n    at new Test (/Users/leeray/Projects/GitHub/ai-mermaid-chart-generator/nodejs-api/node_modules/supertest/lib/test.js:34:14)\n    at Object.obj.<computed> [as get] (/Users/leeray/Projects/GitHub/ai-mermaid-chart-generator/nodejs-api/node_modules/supertest/index.js:43:18)\n    at Object.get (/Users/leeray/Projects/GitHub/ai-mermaid-chart-generator/nodejs-api/src/test/routes/api.test.js:40:10)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"API Routes GET /api/v1/ai-mermaid/history should retrieve all chat history","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should retrieve all chat history"}],"failureMessage":"\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mAPI Routes › POST /api/v1/ai-mermaid/generate › should generate Mermaid code and save chat history\u001b[39m\u001b[22m\n\n    TypeError: app.address is not a function\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m  9 |\u001b[39m       \u001b[36mconst\u001b[39m userInput \u001b[33m=\u001b[39m \u001b[32m'Create a flowchart for a login system'\u001b[39m\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 10 |\u001b[39m       \u001b[36mconst\u001b[39m response \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m request(app)\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 11 |\u001b[39m         \u001b[33m.\u001b[39mpost(\u001b[32m'http://localhost:3000/api/v1/ai-mermaid/generate'\u001b[39m)\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m          \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 12 |\u001b[39m         \u001b[33m.\u001b[39msend({ userInput })\u001b[22m\n\u001b[2m     \u001b[90m 13 |\u001b[39m         \u001b[33m.\u001b[39mexpect(\u001b[35m200\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 14 |\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Test.serverAddress (\u001b[22m\u001b[2m\u001b[0m\u001b[36mnode_modules/supertest/lib/test.js\u001b[39m\u001b[0m\u001b[2m:46:22)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat new Test (\u001b[22m\u001b[2m\u001b[0m\u001b[36mnode_modules/supertest/lib/test.js\u001b[39m\u001b[0m\u001b[2m:34:14)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.obj.<computed> [as post] (\u001b[22m\u001b[2mnode_modules/supertest/index.js\u001b[2m:43:18)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.post (\u001b[22m\u001b[2m\u001b[0m\u001b[36msrc/test/routes/api.test.js\u001b[39m\u001b[0m\u001b[2m:11:10)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mAPI Routes › POST /api/v1/ai-mermaid/generate › should return 500 if user input is missing\u001b[39m\u001b[22m\n\n    TypeError: app.address is not a function\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 23 |\u001b[39m     it(\u001b[32m'should return 500 if user input is missing'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[22m\n\u001b[2m     \u001b[90m 24 |\u001b[39m       \u001b[36mconst\u001b[39m response \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m request(app)\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 25 |\u001b[39m         \u001b[33m.\u001b[39mpost(\u001b[32m'/api/v1/ai-mermaid/generate'\u001b[39m)\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m          \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 26 |\u001b[39m         \u001b[33m.\u001b[39msend({})\u001b[22m\n\u001b[2m     \u001b[90m 27 |\u001b[39m         \u001b[33m.\u001b[39mexpect(\u001b[35m500\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 28 |\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Test.serverAddress (\u001b[22m\u001b[2m\u001b[0m\u001b[36mnode_modules/supertest/lib/test.js\u001b[39m\u001b[0m\u001b[2m:46:22)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat new Test (\u001b[22m\u001b[2m\u001b[0m\u001b[36mnode_modules/supertest/lib/test.js\u001b[39m\u001b[0m\u001b[2m:34:14)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.obj.<computed> [as post] (\u001b[22m\u001b[2mnode_modules/supertest/index.js\u001b[2m:43:18)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.post (\u001b[22m\u001b[2m\u001b[0m\u001b[36msrc/test/routes/api.test.js\u001b[39m\u001b[0m\u001b[2m:25:10)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mAPI Routes › GET /api/v1/ai-mermaid/history › should retrieve all chat history\u001b[39m\u001b[22m\n\n    TypeError: app.address is not a function\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 38 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 39 |\u001b[39m       \u001b[36mconst\u001b[39m response \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m request(app)\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 40 |\u001b[39m         \u001b[33m.\u001b[39m\u001b[36mget\u001b[39m(\u001b[32m'/api/v1/ai-mermaid/history'\u001b[39m)\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m          \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 41 |\u001b[39m         \u001b[33m.\u001b[39mexpect(\u001b[35m200\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 42 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 43 |\u001b[39m       expect(response\u001b[33m.\u001b[39mbody\u001b[33m.\u001b[39mstatus)\u001b[33m.\u001b[39mtoBe(\u001b[32m'success'\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Test.serverAddress (\u001b[22m\u001b[2m\u001b[0m\u001b[36mnode_modules/supertest/lib/test.js\u001b[39m\u001b[0m\u001b[2m:46:22)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat new Test (\u001b[22m\u001b[2m\u001b[0m\u001b[36mnode_modules/supertest/lib/test.js\u001b[39m\u001b[0m\u001b[2m:34:14)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.obj.<computed> [as get] (\u001b[22m\u001b[2mnode_modules/supertest/index.js\u001b[2m:43:18)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.get (\u001b[22m\u001b[2m\u001b[0m\u001b[36msrc/test/routes/api.test.js\u001b[39m\u001b[0m\u001b[2m:40:10)\u001b[22m\u001b[2m\u001b[22m\n\n\n  \u001b[1m● \u001b[22mTest suite failed to run\n\n    listen EADDRINUSE: address already in use :::3000\n\n    \u001b[0m \u001b[90m 38 |\u001b[39m\n     \u001b[90m 39 |\u001b[39m \u001b[90m// Start the server\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 40 |\u001b[39m app\u001b[33m.\u001b[39mlisten(\u001b[33mPORT\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\n     \u001b[90m    |\u001b[39m     \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 41 |\u001b[39m   console\u001b[33m.\u001b[39mlog(\u001b[32m`Server running on http://localhost:${PORT}`\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m 42 |\u001b[39m })\u001b[33m;\u001b[39m\u001b[0m\n\n      \u001b[2mat Function.listen (\u001b[22mnode_modules/express/lib/application.js\u001b[2m:635:24)\u001b[22m\n      \u001b[2mat Object.listen (\u001b[22msrc/index.js\u001b[2m:40:5)\u001b[22m\n      \u001b[2mat Object.require (\u001b[22m\u001b[0m\u001b[36msrc/test/routes/api.test.js\u001b[39m\u001b[0m\u001b[2m:2:13)\u001b[22m\n","testExecError":{"message":"","stack":"Error: listen EADDRINUSE: address already in use :::3000\n    at Server.setupListenHandle [as _listen2] (node:net:1937:16)\n    at listenInCluster (node:net:1994:12)\n    at Server.listen (node:net:2099:7)\n    at Function.listen (/Users/leeray/Projects/GitHub/ai-mermaid-chart-generator/nodejs-api/node_modules/express/lib/application.js:635:24)\n    at Object.listen (/Users/leeray/Projects/GitHub/ai-mermaid-chart-generator/nodejs-api/src/index.js:40:5)\n    at Runtime._execModule (/Users/leeray/Projects/GitHub/ai-mermaid-chart-generator/nodejs-api/node_modules/jest-runtime/build/index.js:1439:24)\n    at Runtime._loadModule (/Users/leeray/Projects/GitHub/ai-mermaid-chart-generator/nodejs-api/node_modules/jest-runtime/build/index.js:1022:12)\n    at Runtime.requireModule (/Users/leeray/Projects/GitHub/ai-mermaid-chart-generator/nodejs-api/node_modules/jest-runtime/build/index.js:882:12)\n    at Runtime.requireModuleOrMock (/Users/leeray/Projects/GitHub/ai-mermaid-chart-generator/nodejs-api/node_modules/jest-runtime/build/index.js:1048:21)\n    at Object.require (/Users/leeray/Projects/GitHub/ai-mermaid-chart-generator/nodejs-api/src/test/routes/api.test.js:2:13)\n    at Runtime._execModule (/Users/leeray/Projects/GitHub/ai-mermaid-chart-generator/nodejs-api/node_modules/jest-runtime/build/index.js:1439:24)\n    at Runtime._loadModule (/Users/leeray/Projects/GitHub/ai-mermaid-chart-generator/nodejs-api/node_modules/jest-runtime/build/index.js:1022:12)\n    at Runtime.requireModule (/Users/leeray/Projects/GitHub/ai-mermaid-chart-generator/nodejs-api/node_modules/jest-runtime/build/index.js:882:12)\n    at jestAdapter (/Users/leeray/Projects/GitHub/ai-mermaid-chart-generator/nodejs-api/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:77:13)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at runTestInternal (/Users/leeray/Projects/GitHub/ai-mermaid-chart-generator/nodejs-api/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/Users/leeray/Projects/GitHub/ai-mermaid-chart-generator/nodejs-api/node_modules/jest-runner/build/runTest.js:444:34)\n    at Object.worker (/Users/leeray/Projects/GitHub/ai-mermaid-chart-generator/nodejs-api/node_modules/jest-runner/build/testWorker.js:106:12)"}},{"leaks":false,"numFailingTests":0,"numPassingTests":3,"numPendingTests":0,"numTodoTests":0,"openHandles":[],"perfStats":{"end":1739942086926,"runtime":4476,"slow":false,"start":1739942082450},"skipped":false,"snapshot":{"added":0,"fileDeleted":false,"matched":0,"unchecked":0,"uncheckedKeys":[],"unmatched":0,"updated":0},"testFilePath":"/Users/leeray/Projects/GitHub/ai-mermaid-chart-generator/nodejs-api/src/test/controllers/chat.test.js","testResults":[{"ancestorTitles":["Chat Controller","healthCheck"],"duration":774,"failureDetails":[],"failureMessages":[],"fullName":"Chat Controller healthCheck should return 200 if the API is healthy","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should return 200 if the API is healthy"},{"ancestorTitles":["Chat Controller","generateMermaidCode"],"duration":2837,"failureDetails":[],"failureMessages":[],"fullName":"Chat Controller generateMermaidCode should generate Mermaid code and save chat history","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"should generate Mermaid code and save chat history"},{"ancestorTitles":["Chat Controller","getChatHistory"],"duration":10,"failureDetails":[],"failureMessages":[],"fullName":"Chat Controller getChatHistory should retrieve all chat history","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should retrieve all chat history"}],"failureMessage":null},{"leaks":false,"numFailingTests":2,"numPassingTests":1,"numPendingTests":0,"numTodoTests":0,"openHandles":[],"perfStats":{"end":1739942089283,"runtime":6833,"slow":true,"start":1739942082450},"skipped":false,"snapshot":{"added":0,"fileDeleted":false,"matched":0,"unchecked":0,"uncheckedKeys":[],"unmatched":0,"updated":0},"testFilePath":"/Users/leeray/Projects/GitHub/ai-mermaid-chart-generator/nodejs-api/src/test/services/ai-service.test.js","testResults":[{"ancestorTitles":["AI Service","generateMermaidCode"],"duration":5003,"failureDetails":[{"message":"thrown: \"Exceeded timeout of 5000 ms for a test.\nAdd a timeout value to this test to increase the timeout, if this is a long-running test. See https://jestjs.io/docs/api#testname-fn-timeout.\""}],"failureMessages":["Error: thrown: \"Exceeded timeout of 5000 ms for a test.\nAdd a timeout value to this test to increase the timeout, if this is a long-running test. See https://jestjs.io/docs/api#testname-fn-timeout.\"\n    at it (/Users/leeray/Projects/GitHub/ai-mermaid-chart-generator/nodejs-api/src/test/services/ai-service.test.js:6:5)\n    at _dispatchDescribe (/Users/leeray/Projects/GitHub/ai-mermaid-chart-generator/nodejs-api/node_modules/jest-circus/build/index.js:91:26)\n    at describe (/Users/leeray/Projects/GitHub/ai-mermaid-chart-generator/nodejs-api/node_modules/jest-circus/build/index.js:55:5)\n    at describe (/Users/leeray/Projects/GitHub/ai-mermaid-chart-generator/nodejs-api/src/test/services/ai-service.test.js:5:3)\n    at _dispatchDescribe (/Users/leeray/Projects/GitHub/ai-mermaid-chart-generator/nodejs-api/node_modules/jest-circus/build/index.js:91:26)\n    at describe (/Users/leeray/Projects/GitHub/ai-mermaid-chart-generator/nodejs-api/node_modules/jest-circus/build/index.js:55:5)\n    at Object.describe (/Users/leeray/Projects/GitHub/ai-mermaid-chart-generator/nodejs-api/src/test/services/ai-service.test.js:3:1)\n    at Runtime._execModule (/Users/leeray/Projects/GitHub/ai-mermaid-chart-generator/nodejs-api/node_modules/jest-runtime/build/index.js:1439:24)\n    at Runtime._loadModule (/Users/leeray/Projects/GitHub/ai-mermaid-chart-generator/nodejs-api/node_modules/jest-runtime/build/index.js:1022:12)\n    at Runtime.requireModule (/Users/leeray/Projects/GitHub/ai-mermaid-chart-generator/nodejs-api/node_modules/jest-runtime/build/index.js:882:12)\n    at jestAdapter (/Users/leeray/Projects/GitHub/ai-mermaid-chart-generator/nodejs-api/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:77:13)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at runTestInternal (/Users/leeray/Projects/GitHub/ai-mermaid-chart-generator/nodejs-api/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/Users/leeray/Projects/GitHub/ai-mermaid-chart-generator/nodejs-api/node_modules/jest-runner/build/runTest.js:444:34)\n    at Object.worker (/Users/leeray/Projects/GitHub/ai-mermaid-chart-generator/nodejs-api/node_modules/jest-runner/build/testWorker.js:106:12)"],"fullName":"AI Service generateMermaidCode should generate Mermaid code for valid input","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should generate Mermaid code for valid input"},{"ancestorTitles":["AI Service","validateOpenAIKey"],"duration":459,"failureDetails":[],"failureMessages":[],"fullName":"AI Service validateOpenAIKey should return true for a valid OpenAI API key","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should return true for a valid OpenAI API key"},{"ancestorTitles":["AI Service","validateOpenAIKey"],"duration":480,"failureDetails":[{"matcherResult":{"actual":true,"expected":false,"message":"\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32mfalse\u001b[39m\nReceived: \u001b[31mtrue\u001b[39m","name":"toBe","pass":false}}],"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32mfalse\u001b[39m\nReceived: \u001b[31mtrue\u001b[39m\n    at Object.toBe (/Users/leeray/Projects/GitHub/ai-mermaid-chart-generator/nodejs-api/src/test/services/ai-service.test.js:25:23)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"AI Service validateOpenAIKey should return false for an invalid OpenAI API key","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should return false for an invalid OpenAI API key"}],"failureMessage":"\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mAI Service › generateMermaidCode › should generate Mermaid code for valid input\u001b[39m\u001b[22m\n\n    thrown: \"Exceeded timeout of 5000 ms for a test.\n    Add a timeout value to this test to increase the timeout, if this is a long-running test. See https://jestjs.io/docs/api#testname-fn-timeout.\"\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 4 |\u001b[39m   \u001b[90m// Test generateMermaidCode function\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 5 |\u001b[39m   describe(\u001b[32m'generateMermaidCode'\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 6 |\u001b[39m     it(\u001b[32m'should generate Mermaid code for valid input'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[22m\n\u001b[2m     \u001b[90m   |\u001b[39m     \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 7 |\u001b[39m       \u001b[36mconst\u001b[39m userInput \u001b[33m=\u001b[39m \u001b[32m'Create a flowchart for a login system'\u001b[39m\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 8 |\u001b[39m       \u001b[36mconst\u001b[39m mermaidCode \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m generateMermaidCode(userInput)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 9 |\u001b[39m       expect(mermaidCode)\u001b[33m.\u001b[39mtoBeDefined()\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat it (\u001b[22m\u001b[2m\u001b[0m\u001b[36msrc/test/services/ai-service.test.js\u001b[39m\u001b[0m\u001b[2m:6:5)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat describe (\u001b[22m\u001b[2m\u001b[0m\u001b[36msrc/test/services/ai-service.test.js\u001b[39m\u001b[0m\u001b[2m:5:3)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.describe (\u001b[22m\u001b[2m\u001b[0m\u001b[36msrc/test/services/ai-service.test.js\u001b[39m\u001b[0m\u001b[2m:3:1)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mAI Service › validateOpenAIKey › should return false for an invalid OpenAI API key\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\n    Expected: \u001b[32mfalse\u001b[39m\n    Received: \u001b[31mtrue\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 23 |\u001b[39m       process\u001b[33m.\u001b[39menv\u001b[33m.\u001b[39m\u001b[33mOPENAI_API_KEY\u001b[39m \u001b[33m=\u001b[39m \u001b[32m'invalid-key'\u001b[39m\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 24 |\u001b[39m       \u001b[36mconst\u001b[39m isValid \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m validateOpenAIKey()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 25 |\u001b[39m       expect(isValid)\u001b[33m.\u001b[39mtoBe(\u001b[36mfalse\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                       \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 26 |\u001b[39m     })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 27 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 28 |\u001b[39m })\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.toBe (\u001b[22m\u001b[2m\u001b[0m\u001b[36msrc/test/services/ai-service.test.js\u001b[39m\u001b[0m\u001b[2m:25:23)\u001b[22m\u001b[2m\u001b[22m\n"}],"wasInterrupted":false}